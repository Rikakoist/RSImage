<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJVULwCVVC8El1UvOpdV
        L1qXVS9al1UvWpdVL1qXVS9al1UvWpdVL1qXVS9al1UvWpdVL1qXVS9al1UvWpdVL1qXVS9al1UvWpdV
        L1qXVS9al1UvWpdVL1qXVS9al1UvPpZWLwWWVi8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAl1UvAJdV
        LzqXVS/nl1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dV
        L/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS/pl1UvPZdVLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACXVS8Al1UvWpdVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dV
        L/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS9al1UvAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJdVLwCXVS9al1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dV
        L/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL1qXVS8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAl1UvAJdVL1qXVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dV
        L/+XVS/6l1Uv6JdVL+eXVS/6l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1UvWpdV
        LwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXVS8Al1UvWpdVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dV
        L/+XVS//l1Uv45dVL2+XVS8ol1UvJ5dVL26XVS/il1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dV
        L/+XVS9al1UvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJdVLwCXVS9al1Uv/5dVL/+XVS//l1Uv/5dV
        L/+XVS//l1Uv/5dVL/SXVS9bk1EzAJhWLgCXVS4AoFo2AJZVL1iXVS/yl1Uv/5dVL/+XVS//l1Uv/5dV
        L/+XVS//l1Uv/5dVL1qXVS8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAl1UvAJdVL1qXVS//l1Uv/5dV
        L/+XVS//l1Uv/5dVL/+XVS//l1UvwJdVLw2XVS8Sl1Uvk5dVL5OXVS8Sl1UvC5dVL72XVS//l1Uv/5dV
        L/+XVS//l1Uv/5dVL/+XVS//l1UvWpdVLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXVS8Al1UvWpdV
        L/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS+ulFUxApdVLx2XVS/kl1Uv5JdVLx0pOE8Al1UvqZdV
        L/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS9al1UvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJdV
        LwCXVS9al1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL9OXVS8dl1UvCZdVL1CXVS9Ql1UvCZdV
        LxqXVS/Pl1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL1qXVS8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAl1UvAJdVL1qXVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/ZdVL4+XVS8Pl1QvAJhV
        LgCXVS8Nl1Uvi5dVL/2XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1UvWpdVLwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACXVS8Al1UvWpdVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv+ZdV
        L7eXVS9tl1Uva5dVL7OXVS/5l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS9al1UvAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJdVLwCXVS9al1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dV
        L/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dV
        L1qXVS8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAl1UvAJdVL1qXVS//l1Uv/5dVL/+XVS//l1Uv9ZdV
        L7CXVS+jl1Uvo5dVL6WXVS+ll1UvpZdVL6WXVS+ll1UvpZdVL6WXVS+ll1UvsJdVL/WXVS//l1Uv/5dV
        L/+XVS//l1UvWpdVLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXVS8Al1UvWpdVL/+XVS//l1Uv/5dV
        L/+XVS/il1UvHZdVLxGXVS8el1UvCpdVLwAAAAAAAAAAAAAAAAAAAAAAAAAAAJdVLwCXVS8dl1Uv4pdV
        L/+XVS//l1Uv/5dVL/+XVS9al1UvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJdVLwCXVS9al1Uv/5dV
        L/+XVS//l1Uv/5dVL+KXVS8dl1UvkJdVL+aXVS9Pl1UvAAAAAAAAAAAAAAAAAAAAAAAAAAAAl1UvAJdV
        Lx2XVS/il1Uv/5dVL/+XVS//l1Uv/5dVL1qXVS8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAl1UvAJdV
        L1qXVS//l1Uv/5dVL/+XVS//l1Uv4pdVLx2XVS+jl1Uv/5dVL1qXVS8AAAAAAAAAAAAAAAAAAAAAAAAA
        AACXVS8Al1UvHZdVL+KXVS//l1Uv/5dVL/+XVS//l1UvWpdVLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACXVS8Al1UvWpdVL/+XVS//l1Uv/5dVL/+XVS/il1UvHZdVL6OXVS//l1UvWpdVLwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJdVLwCXVS8dl1Uv4pdVL/+XVS//l1Uv/5dVL/+XVS9al1UvAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJdVLwCXVS9al1Uv/5dVL/+XVS//l1Uv/5dVL+KXVS8dl1Uvo5dVL/+XVS9al1UvAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAl1UvAJdVLx2XVS/il1Uv/5dVL/+XVS//l1Uv/5dVL1qXVS8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAl1UvAJdVL1aXVS/9l1Uv/5dVL/+XVS//l1Uv4pdVLx2XVS+Ql1Uv5pdV
        L0+XVS8AAAAAAAAAAAAAAAAAAAAAAAAAAACXVS8Al1UvHZdVL+KXVS//l1Uv/5dVL/+XVS//l1UvWpdV
        LwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXVS8Al1UvGpdVL7KXVS//l1Uv/5dVL/+XVS/il1UvHZdV
        LxGXVS8el1UvCpdVLwAAAAAAAAAAAAAAAAAAAAAAAAAAAJdVLwCXVS8dl1Uv4pdVL/+XVS//l1Uv/5dV
        L/+XVS9al1UvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXVS8Al1UvHpdVL7KXVS//l1Uv/5dV
        L/WXVS+wl1Uvo5dVL6OXVS+ll1UvpZdVL6WXVS+ll1UvpZdVL6WXVS+ll1UvpZdVL7CXVS/1l1Uv/5dV
        L/+XVS//l1Uv/5dVL1qXVS8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXVS8Al1UvHpdV
        L7KXVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dVL/+XVS//l1Uv/5dV
        L/+XVS//l1Uv/5dVL/+XVS/nl1UvO5dVLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACXVS8Al1UvG5dVL1aXVS9al1UvWpdVL1qXVS9al1UvWpdVL1qXVS9al1UvWpdVL1qXVS9al1UvWpdV
        L1qXVS9al1UvWpdVL1qXVS9al1UvWpdVLzqWVi8EllYvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AD
        wA/wAAAP8AAAD/AAAA/wAYAP8AAAD/AAAA/wAAAP8AP4D/AD+A/wA/gP8AP4D/AD+A/wA/gP8AP4D/gA
        AA/8AAAP/gAAD/////////////////////8=
</value>
  </data>
</root>