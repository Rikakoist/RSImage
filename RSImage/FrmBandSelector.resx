<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="BandSelectorImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="BandSelectorImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAS
        DQAAAk1TRnQBSQFMAgEBCQEAASABAAEgAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAATADAAEBAQABCAYAAQwYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/8QAAfEBEwUOARMB8TcA
        AeoCAQMCAgQB6jcAARIBIAEfAy0BhQGhARQ3AAFuAfkBIAMzAaEB/AFtNwABHAJHA1oCyAHsNwABkwIW
        A+QC5gGSNwABGgK9A8IBCQHdAe83AAEaAb0F9AHdAbw3AAH/ARoBvQHCAggBvAHwAfT/APgAAfEBEwUO
        ARMB8QcAAfEBEwIOAQ8CDgETAfEHAAHxARMCDgEPAg4BEwHxBwAB8QETAg4BDwIOARMB8QcAAeoHBAHq
        BwAB6gMBAQMDAgHqBwAB6gMBAWEDBAHqBwAB6gMCAQYDBAHqBwABEgGhBYUBoQEUBwABEgEgAh8BMAIt
        ATMBFAcAARIBIAIfAYcChQGhARQHAAESATMCLQGBAoUBoQEUBwABrgH8BaEB/AFtBwABbgH5AiABNwIz
        AfoBbQcAAW4B+QIgAaQCoQH8AW0HAAFyAfoCMwG4AqEB/AFtBwABtQfIAewHAAEcA0cBXgNaAewHAAEc
        A0cBywPIAewHAAGYA1oB3wPIAewHAAG1B+YBkgcAAZMDFgHlA+QBkgcAAZMDFgHRA+YBkgcAAZgD5AHo
        A+YBkgcAAQkB3QUJAd0B7wcAARoDvQHDA8IB7wcAARoDvQHdAgkB3QHvBwABCAPCAeICCQHdAe8HAALd
        BfQB3QG8BwABGgG9AvQB9gL0AcIBvAcAARoBvQL0Af8C9AHdAbwHAALCAvQB/wL0Ad0BvAcAAf8E3QK8
        AfAB9AcAAf8BGgG9ARoBGwMIAfQHAAH/ARoBvQEaAd0CvAHwAfQHAAH/A8IBGQK8AfAB9P8ABQAB8AoH
        AbwB/zMAAbwBHAKZAXgCmQIcAe8BHAH3AfQC/zEAAfABHAEaAZkBHAGZAhwBCAHvARwB9wEHAbwB/zEA
        AfABuwHcAQkBCAEbARoBmQKYARwBkgHzAQcB9AH/EwAB8QETBQ4BEwHxBwAB8QETBQ4BEwHxBAAB8AG0
        AroB2wEHApkBmAEcAXgBkQHzAe0BBwHwAwABbQEAAW0BAAFtAQABbQEAAW0HAAHqBwEB6gcAAeoHAgHq
        BAAB8QG0AdsB3AG6AdwBGgEIA5kBuwHzAfcB8wG8EwABEgEgBR8BIAEUBwABEgEzBS0BMwEUBAAB8QG0
        AtsBugHcARkBmQEaAggBmAHzAfcB8wHwAwABbQcAAW0HAAFuAfkFIAH5AW0HAAFyAfoFMwH6AW0EAAHx
        ArQEugS7AZkB9AHvAfMB8BMAARwHRwHsBwABmAdaAewEAAHxAbQC2wG6AtsBugHcAgkBuwH0Ae8B8wHw
        AwABbQcAAW0HAAGTBxYBkgcAAZgH5AGSBAAB8QG0AtsBtALbAboB2wLcAdsB/wHvAfQB8RMAARoHvQHv
        BwABCAfCAe8EAAHxB7QEugH/AQcB9AHxAwABbQcAAW0HAAEaAb0F9AG9AbwHAALCBfQBwgG8BAAB8wHy
        AQcIvAHwAf8BBwH/AfETAAH/ARoBvQUaAfQHAAH/A8IECAH0BgAB8Qr/AQcB/wHxAwABbQEAAW0BAAFt
        AQABbQEAAW0mAAHzAfIBBwi8AfAB/wHxNAAB8Qr/AfE0AAHzCvIB8zAAAUIBTQE+BwABPgMAASgDAAFA
        AwABMAMAAQEBAAEBBQABgAEBFgAD/wEAAv8GAAL/BgAC/wYAAeABDwYAAeABDwYAAeABDwYAAeABDwYA
        AeABDwYAAeABDwYAAeABDwYAAeABDwYAAeABDwYAAv8GAAL/BgAC/wYAAv8GABj/AeABDwHgAQ8B4AEP
        AeABDwHgAQ8B4AEPAeABDwHgAQ8B4AEPAeABDwHgAQ8B4AEPAeABDwHgAQ8B4AEPAeABDwHgAQ8B4AEP
        AeABDwHgAQ8B4AEPAeABDwHgAQ8B4AEPAeABDwHgAQ8B4AEPAeABDwHgAQ8B4AEPAeABDwHgAQ8B4AEP
        AeABDwHgAQ8B4AEPIP8BAAEHBv8BAAEBBv8BAAEBBv8CAAL/AeABDwHgAQ8CAAHqAa8B4AEPAeABDwIA
        Av8B4AEPAeABDwIAAu8B4AEPAeABDwIAAv8B4AEPAeABDwIAAu8B4AEPAeABDwIAAv8B4AEPAeABDwIA
        Au8B4AEPAeABDwIAAv8B4AEPAeABDwHAAQAB6gGvBP8BwAEABv8B8AEABv8B8AEABv8L
</value>
  </data>
</root>